- if answer.persisted?
  div id="answer-block-#{answer.id}"
    .row
      div class="col-md-1 col-md-offset-1"
        = render partial: "votes/vote", locals: {votable: answer}
      div class="col-md-10"
        - if answer.best
          p.best-answer = answer.body
        - unless answer.best
          p = answer.body
          ul
          - answer.attachments.each do |a|
            li id="answer-attachment-#{a.id}"
              = link_to a.file.identifier, a.file.url
              |&nbsp;
              = link_to '<span class="glyphicon glyphicon-remove"></span>'.html_safe+'Delete file', attachment_path(a), method: :delete, remote: true if user_signed_in? && current_user.id == answer.user_id
          
        - if user_signed_in? && current_user.id == answer.question.user_id && current_user.id != answer.user_id && !answer.best
                = link_to 'best', best_path(answer), method: :post, remote: true
        p
          - if can?(:destroy, answer)
            = link_to 'Delete my answer', answer_path(answer), method: 'delete', remote: true
          - if can?(:update, answer)
            | &nbsp;
            = link_to 'Edit', '', class: 'edit-answer-link', data: { answer_id: answer.id }
          div(class="row question-form")
            div(class="col-md-3")
              = form_for answer, method: :patch, remote: true, html: { id: "edit-answer-#{answer.id}" } do |f|
                = f.label :body, 'Answer'
                .answer-errors
                = f.text_area :body
                .answer-attachments
                  /= f.fields_for :attachments do |a|
                    = render 'attachment_fields', f: a
                  .add-file-link
                    = link_to_add_association 'Add file', f, :attachments, partial: 'attachments/attachment_fields'
                p
                  = f.submit 'Save', class: "btn btn-primary"
        .comments
          strong Comments
        = render answer.comments
        = link_to 'Add comment','', class: 'create-comment-link', data: { commentable_id: answer.id }
        = form_for [ answer, answer.comments.build ], method: "post", remote: true, html: { id: "create-comment-#{answer.id}"} do |f|
          = f.label :comment_body, "Comment"
          = f.text_area :comment_body
          = f.submit 'Create'
          .comment-errors

    hr.style-two
